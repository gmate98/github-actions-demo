name: Release Creation

on:
  workflow_dispatch:
    inputs:
      tag_name:
        type: string
        description: "Enter the tag name"
        required: true
      toolchain:
        type: choice
        description: "Select toolchain"
        options:
          - stm32-gcc-toolchain
          - bxarm-toolchain
        default: 'bxarm-toolchain'
        
run-name: Release creation with tag:${{ inputs.tag_name}} by @${{ github.actor }}

jobs:
  Create-Tag:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ github.event.inputs.tag_name }}
          git push origin ${{ github.event.inputs.tag_name }}

  Main-Workflow:
    uses: ./.github/workflows/main_CICD.yml
    needs: Create-Tag
    with:
      toolchain: ${{ github.event.inputs.toolchain }}
      configuration: 'release'
      run-linux-jobs: true

  GitHub-Package:
    runs-on: ubuntu-22.04
    needs: Main-Workflow

    steps:
      - name: Download STM32 Artifact
        uses: actions/download-artifact@v4
        with:
          name: STM32-Microcontroller_Binary
          path: ./STM32-Microcontroller_Binary

      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: Test_Results
          path: ./Test_Results

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: Linux-build
          path: ./Linux-build

      - name: Package Artifacts
        run: |
          mkdir -p release-packages
          # Include STM32 binaries
          mv STM32-Microcontroller_Binary/*.elf release-packages/STM32-Microcontroller_Binary/
          # Include test results
          mv Test_Results release-packages/
          # Include build artifact
          mv Linux-build release-packages/
          cd release-packages
          # Package all into a single tar.gz file
          tar -czvf stm32_project_${{ github.event.inputs.tag_name || 'latest' }}.tar.gz *

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.tag_name }}
        run: |
          gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${GITHUB_REPOSITORY#*/} $tag" \
            --generate-notes \
            ./release-packages/stm32_project_${{ github.event.inputs.tag_name || 'latest' }}.tar.gz
