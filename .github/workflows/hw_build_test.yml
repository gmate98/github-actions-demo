name: HHLA Sky SC - Target HW Build and Test

on: 
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["HHLA Sky SC - CI/CD Main"]
    types:
      - completed

jobs:
  Build_and_test_target_HW:
    name: "Build and test for/on HW"
    runs-on: [self-hosted, linux]
    steps:
      - name: Setup
        run: |
          echo "Starting build for target HW!"

  ARM-NONE-EABI-GCC_build:
    name: "ARM-NONE-EABI-GCC build"
    runs-on: [self-hosted, linux]
    needs: Build_and_test_target_HW
    if: ${{ ((github.event_name == 'workflow_run' && (github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'skipped')) || github.event_name == 'pull_request') && contains(github.head_commit.message, '#build-gcc-arm') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.ref }}

      - name: Set up ARM GCC Toolchain and Compile STM32 Project
        run: |
          cd mcu_test_proj
          rm -rf build
          cmake . --preset=gcc-debug
          cmake --build --preset=gcc-debug

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: STM32-Microcontroller_Binary
          path: mcu_test_proj/build/gcc-debug/*.elf

  BXARM_build:
    name: "BXARM build"
    runs-on: [self-hosted, linux]
    needs: Build_and_test_target_HW
    if: ${{ ((github.event_name == 'workflow_run' && (github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'skipped')) || github.event_name == 'pull_request') && !contains(github.head_commit.message, '#build-gcc-arm') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.ref }}

      - name: Set up BXARM Toolchain and Compile STM32 Project
        run: |
          cd mcu_test_proj
          rm -rf build
          cmake . --preset=bxarm-debug
          cmake --build --preset=bxarm-debug

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: STM32-Microcontroller_Binary
          path: mcu_test_proj/build/bxarm-debug/*.elf
